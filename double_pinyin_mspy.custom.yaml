# Rime schema
# encoding: utf-8
patch:
  switches:
    # - name: ascii_mode
    #   reset: 0
    #   states: [ 中文, Eng ]
    - name: emoji_suggestion
      reset: 1
      states: [ "Hah", "😄" ]
    - name: full_shape
      states: [ 半, 全 ]
    - name: tranditional_converter
      reset: 0
      states: [简,繁]
    - name: ascii_punct
      reset: 1
      states: ["。，",". ," ]
  schema/name: "微软双拼++"

  schema/dependencies:
    - reverse_lookup_helper
  engine/filters:
    - reverse_lookup_filter@double_assistant_reverse_lookup
    - simplifier@tranditional_converter
    - simplifier@emoji_suggestion
    - uniquifier
  engine/segmentors:
    - ascii_segmentor
    - matcher
    - affix_segmentor@double_assistant_reverse_lookup_helper
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  engine/translators:
    - punct_translator
    - script_translator
    - script_translator@double_assistant_reverse_lookup_helper
    - table_translator@custom_phrase
    - lua_translator@date_time_translator

#  speller/delimiter: "'"
  speller/alphabet: zyxwvutsrqponmlkjihgfedcba;ABCDEFGHIJKLMNOPQRSTUVWXYZ
  speller/initials: zyxwvutsrqponmlkjihgfedcbaABCDEFGHIJKLMNOPQRSTUVWXYZ
  speller/algebra:
    - derive/^([a-z;]+):\w+/$1/
    - derive/^([a-z;]+):(\w)\w+/$1$2/
    - xform/://
    - xlit/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/

  double_assistant_reverse_lookup: #該反查濾鏡名
    tags: [ double_assistant_reverse_lookup_helper ] #挂在helper这个translator上
    overwrite_comment: true
    dictionary: my_own.assist #反查辅助码
    comment_format:
      - xform/([a-z;]{2}):([\w]{2})/〔$2〕/
      - xlit/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/
  custom_phrase:
    dictionary: ""
    user_dict: custom_phrase
    db_class: stabledb
    enable_completion: false
    enable_sentence: false
    initial_quality: 1

  tranditional_converter:
    opencc_config: s2t.json
    option_name: tranditional_converter
  emoji_suggestion:
    opencc_config: emoji.json
    option_name: emoji_suggestion
  translator:
    dictionary: collection
    user_dict: my_dict
    initial_quality: 0.9
    preedit_format:
      - xform/([\w;]{2})([\w;]+)/$1:\U$2\E/
      - xform/([aoe])(\w)/0$2/
      - xform/([bpmnljqxy])n/$1in/
      - xform/(\w)g/$1eng/
      - xform/(\w)q/$1iu/
      - xform/([gkhvuirzcs])w/$1ua/
      - xform/(\w)w/$1ia/
      - xform/([dtnlgkhjqxyvuirzcs])r/$1uan/
      - xform/0r/er/
      - xform/([dtgkhvuirzcs])v/$1ui/
      - xform/(\w)v/$1ve/
      - xform/(\w)t/$1ve/
      - xform/([gkhvuirzcs])y/$1uai/
      - xform/(\w)y/$1v/
      - xform/([dtnlgkhvuirzcs])o/$1uo/
      - xform/(\w)p/$1un/
      - xform/([jqx])s/$1iong/
      - xform/(\w)s/$1ong/
      - xform/([jqxnl])d/$1iang/
      - xform/(\w)d/$1uang/
      - xform/(\w)f/$1en/
      - xform/(\w)h/$1ang/
      - xform/(\w)j/$1an/
      - xform/(\w)k/$1ao/
      - xform/(\w)l/$1ai/
      - xform/(\w)z/$1ei/
      - xform/(\w)x/$1ie/
      - xform/(\w)c/$1iao/
      - xform/(\w)b/$1ou/
      - xform/(\w)m/$1ian/
      - xform/(\w);/$1ing/
      - xform/0(\w)/$1/
      - "xform/(^|[ '])v/$1zh/"
      - "xform/(^|[ '])i/$1ch/"
      - "xform/(^|[ '])u/$1sh/"
      - xform/([jqxy])v/$1u/
      - xform/([nl])v/$1ü/
      - xform/([\w;ü]+)/\{$1\}/
#    spelling_hints: 10
#    comment_format:
#      - xform/.*([A-Z]{2})$/[$1]/
#    db_class: tabledb


  double_assistant_reverse_lookup_helper:
    tag: double_assistant_reverse_lookup_helper
    dictionary: my_own.assist
    spelling_hints: 10
    enable_completion: true
    prefix: "`"
    suffix: ""
    tips: 〔反查辅助码〕


  __include: easy_en:/patch_double_pinyin_mspy
  easy_en/enable_sentence: false

  switches/@next:
    name: symbol_support
    reset: 1
    states: [ "无符", "符" ]
  'engine/filters/@before 0':
    simplifier@symbol_support
  symbol_support:
    opencc_config: symbol.json
    option_name: symbol_support
    tips: all
  'punctuator/import_preset': symbols.custom
  'recognizer/patterns/punct': "^/([a-z]+|[0-9])$"
  'recognizer/patterns/double_assistant_reverse_lookup_helper': "`[a-z;]*$"
